//
//  main.cpp
//  Baekjoon
//
//  Created by 이준후
//  Copyright © 2020 이준후. All rights reserved.
//

#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <list>


using namespace std;

long long dp[100001][4]={0};
const int mod = 1000000009;
const int Max = 100000;


int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    
    int N;
    cin>> N;
    
    dp[1][1] = dp[2][2] = dp[3][1] = dp[3][2] = dp[3][3] = 1; //dp initialization
    
    for (int n = 4; n <= Max; n++)
    {
        if (n - 1 >= 0) {
            dp[n][1] = (dp[n - 1][2] + dp[n - 1][3]) % mod;
        }
        if (n - 2 >= 0) {
            dp[n][2] = (dp[n - 2][1] + dp[n - 2][3]) % mod;
        }
        if (n - 3 >= 0) {
            dp[n][3] = (dp[n - 3][1] + dp[n - 3][2]) % mod;
        }
    }
    int val;
    
    
    
    while(N>0)
    {
        cin >> val;
        cout << (dp[val][1] + dp[val][2] + dp[val][3]) % mod<<'\n';
        
        N--;
    }
}

