#include <iostream>
#include <algorithm>
#include <vector>


using namespace std;

vector<int> prime;
bool check[1000001];
int cnt=0;

void find(int A)
{
    
    int IndexLimit=0;
    while(prime[IndexLimit]<=A)
    {
        ++IndexLimit;
    }
    
    for(int i=0; i<IndexLimit; ++i)
    {
        if(!check[A-prime[i]]) // A - prime[i] == 소수
        {
            cnt++;
        }
    }
    if(!check[A/2])
    {
        cnt=(cnt/2)+1; return; //중복제거
    }
    else{
        cnt=cnt/2;return;
    }
    
}


int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    
    check[1]=true;
    for(long i=2; i<=1000000; ++i) //eratosthenes
    {
        if(check[i] == false)
        {
            prime.push_back(i);
            for(long long j=i*i; j<=1000000; j+=i)
            {
                check[j]=true;
            }
        }
    }
    
    int N; // testCase number
    cin>>N;
    int tmp;
    while(N>0)
    {
        cin >>tmp;
        find(tmp);
        cout<<cnt<<'\n';
        cnt=0;
        N--;
    }
    return 0;
}
