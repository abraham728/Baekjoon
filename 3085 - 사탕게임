//
//  main.cpp
//  Baekjoon
//
//  Created by 이준후
//  Copyright © 2020 이준후. All rights reserved.
//

#include <iostream>
#include <algorithm>
#include <string>

using namespace std;

int check(string Candy[], int size)
{
    int ans = 1;
    for(int i=0; i<size; i++)
    {
        int tmp = 1;
        for(int j=1; j<size; j++) //오른쪽으로 가는 경우
        {
            if( Candy[i][j] == Candy[i][j-1]) // 연속된다면
            {
                tmp++;
            }
            else
            {
                tmp =1;
            }
            if(ans < tmp) ans = tmp;
        }
        tmp = 1;//다시 셀거므로 reset
        for(int j=1; j<size; j++) //오른쪽으로 가는 경우
        {
            if( Candy[j][i] == Candy[j-1][i]) // 연속된다면
            {
                tmp++;
            }
            else
            {
                tmp =1;
            }
            if(ans < tmp) ans = tmp;
        }
    }
    return ans;
}

int main()
{
    
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    
    int N;
    cin >> N;
    
    string Candy[50];
    
    int high=0;
    
    for(int i=0; i<N; i++)
    {
        cin >> Candy[i];
    }
    
    for(int i=0; i<N; i++)
    {
        for(int j=0; j<N; j++)
        {
            if((j+1) <N) // 오른쪽 부분과 바꾸는 경우
            {
                swap(Candy[i][j],Candy[i][j+1]);
                int tmp = check(Candy, N);
                high = max(high, tmp);
                swap(Candy[i][j],Candy[i][j+1]); //원상복구
            }
            
            if( (i+1) < N)
            {
                swap(Candy[i][j],Candy[i+1][j]);
                int tmp = check(Candy, N);
                high = max(high, tmp);
                swap(Candy[i][j],Candy[i+1][j]);
            }
        }
        if( high == N) break;
    }
    
    
    cout << high <<'\n';
    return 0;
}
